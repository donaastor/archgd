-------------- INSTALL --------------

nakon sto bootujemo u arch live, radimo:
1. proveravamo imamo li internet:
	ping archlinux.org
1.1 ako nemamo, namestamo Wi-Fi:
	iwctl
	device list
	station _device_ scan
	station _device_ get-networks
	station _device_ connect _SSID_
	quit
2. brisemo disk ako je SSD, npr /dev/nvme0n1:
	blkdiscard /dev/nvme0n1
3. pravimo particije na disku:
	3.1. da izlistamo particije:
		fdisk -l
	3.2. sada biramo disk za instalaciju, na primer /dev/nvme0n1, i otvaramo ga:
		fdisk /dev/nvme0n1
	3.3. sada pravimo partition table:
		o
	3.4. pravimo particije:
		n
		od 0x800 do 0x80800 (256MiB za boot)
		n
		od 0x80800 do 0x80800+0x800*(broj MiB za glavnu particiju)
	3.5. pisemo promene na disk:
		w
4. listamo nove particije:
	fdisk -l
5. pokreni skriptu:
	cd /tmp
	curl https://raw.githubusercontent.com/donaastor/archgd/main/scripts/ins.sh > ins.sh
	bash ins.sh
	(i sad prati sta ti pise)

-------------- TWEAKS ---------------

1. Wi-Fi:
	(package iwd)
	nano /etc/iwd/main.conf:
		(dodaj na kraj)
		[General]
		EnableNetworkConfiguration=true
	nano /etc/resolv.conf:
		(dodaj na kraj)
		nameserver 8.8.8.8
	iwctl:
		device list
		station _device_ scan
		station _device_ get-networks
		station _device_ connect _SSID_
	systemctl stop NetworkManager iwd
	systemctl start NetworkManager iwd
	u .bashrc:
		wifi() {
		  local boi=1
		  if [ "$1" = "off" ]; then
		    iwctl station wlan0 disconnect
		    boi=2
		  elif [ "$1" = "tata" ]; then
		    local ssid="Galaxy A1227EC"
		  elif [ "$1" = "moj" ]; then
		    local ssid="Dona_Astor"
		  elif [ "$1" = "sony" ]; then
		    local ssid="12RVWOvref62cyg9"
		  elif [ "$1" = "ajla" ]; then
		    local ssid="ZTE_4A8889"
		  else
		    boi=0
		  fi
		  if [ $boi = 1 ]; then
		    iwctl station wlan0 connect "$ssid"
		  elif [ $boi = 0 ]; then
		    iwctl station wlan0 connect "$1"
		  fi
		}
	u i3status:
		wireless wlan0 {
			format_up = "W: %ip (%essid, %quality)"
			format_down = "W"
		}
		ethernet _first_ {
			format_up = "E: %ip (%speed)"
			format_down = "E"
		}
2. Brightness:
	kao root:
	cd /sys/class/backlight/???/
		(jedini folder ce biti tu, umesto ovog ???,
		nesto kao "amdgpu_bl0")
	cat brightness
	echo 31 > brightness
3. SSD trim:
	da bi rekao SSD-u koje strane se ne koriste,
	(sto ostaje da visi nakon sto se neki fajl obrise)
	pokreni ovu komandu:
		sudo fstrim -v /
	(vidi man fstrim za vise opcija...)
	pokreni ovo ako si obrisao puno memorije sa diska,
	ili jednostavno posle dosta vremena...
	mozes i enablovati timer koji to obavlja nedeljno:
		sudo systemd enable fstrim.timer
	da ocistis ceo disk, idi:
		blkdiscard "/dev/device"
	imas opcije:
		--secure (za brisanje garbedza)
		-z / --zeroout (za punjenje nulama)
4. HiDPI:
	bitno je da namestis Xft.dpi za X, da bi sistem znao
	DPI monitora, a za aplikacije namestaj rucno jer svaka
	koristi svoje nesto: uglavnom su to flagovi GDK_SCALE,
	GDK_DPI_SCALE, QT_SCALE_FACTOR, QT_SCREEN_SCALE_FACTORS
	koje iz terminala mozes bukvalno da pozoves sa
	"GDK_SCALE=2 geany" npr, a kada nesto odlucis da hoces
	definitivno da koristis, onda mozes da ga exportujes u
	.xinitrc: "export GDK_SCALE=2" ili da namestis alias
	u /etc/bash.bashrc ili ~/.xinitrc:
	"alias geany='GDK_SCALE=2 geany'"
	alternativno, idi na  wiki.archlinux.org/title/HiDPI
5. Battery:
	pacman -S acpi
	path = /sys/class/power_supply/BAT1/...
	fajl moze biti npr uevent ili capacity
	za i3status (tu mora uevent):
		battery 1 {
			format = "%percentage"
			low_threshold = 15
			threshold_type = "percentage"
			path = "/sys/class/power_supply/BAT1/uevent"
			format_percentage: "%.01f%s"
		}
6. Suspend:
	proveri da li racunar zaista ide na pravi (deep) suspend
	u fajlu /sys/power/state treba da je sadrzano "mem",
	a u fajlu /sys/power/mem_sleep treba da je uokvireno "deep"
	ako to nije tako, onda probaj nesto na silu, vidi
	https://www.kernel.org/doc/html/latest/admin-guide/pm/sleep-states.html
7. Mouse speed:
	xinput list
	nadji svoj mis pod "Virtual core pointer" (to nije "Virtual core XTEST pointer")
	tvoj_mis="..."
	xinput list-props "$tvoj_mis"
	vidi da li ima "Coordinate Transformation Matrix"
	speed="..." (real, 1 je default, 0 je zamrznut mis)
	xinput set-prop "$tvoj_mis" "Coordinate Transformation Matrix" $speed 0 0 0 $speed 0 0 0 1
	stavi ovu poslednju liniju u .xinitrc kada nastelujes speed (substituisi $tvoj_mis naravno)
8. GPU flickering:
	za RX 6650 XT (i slicne, vrv):
		https://bbs.archlinux.org/viewtopic.php?id=279300
	# cd /sys/class/drm/card0/device
	# cat pp_dpm_mclk
	    (sad odaberi koje levele hoces)
	# echo "manual" > power_dpm_force_performance_level
	# echo "1 2 3" > pp_dpm_mclk
	
		SERVICE:
	
	/usr/local/bin/gpu_mclk:
	
		#!/bin/bash
		echo "manual" > /sys/class/drm/card0/device/power_dpm_force_performance_level
		echo "1 2 3" > /sys/class/drm/card0/device/pp_dpm_mclk
	
	/etc/systemd/system/gpu_mclk.service:
	
		[Unit]
		Description=Increase VRAM clock
		
		[Service]
		Type=oneshot
		ExecStart=/usr/local/bin/gpu_mclk
		
		[Install]
		WantedBy=multi-user.target
	
9. GPU fan (flat):
	# cd /sys/class/drm/card0/device/hwmon/hwmon0/
	# echo "1" > pwm1_enable
		(% je ovo/255, dakle 104/255=40%)
	# echo "104" > pwm1
	
		SERVICE
	
	/usr/local/bin/gpu_fan:
	
		#!/bin/bash
		isi() {
		  [[ "$1" =~ ^[1-9][0-9]*$ ]] || [[ "$1" == "0" ]]
		}
		isr() {
		  [[ "$1" =~ ^[0-9][0-9]*\.[0-9][0-9]*$ ]] && ! [[ "${1:0:2}" =~ ^0[^.]$ ]]
		}
		isb() {
		  [[ $(echo "1-($1>=0)*($1<=$2)" | bc) = 0 ]]
		}
		isf() {
		  isi "$1" && isb "$1" 255
		}
		getp() {
		  if (isi "$1" || isr "$1") && isb "$1" 100; then
		    printf "%.0f" $(echo "$1*2.55" | bc)
		  else printf 256; fi
		}
		if [ -z "$2" ]; then P=256
		else P=$(getp "$2"); fi
		gfl=/tmp/gpu_fan_last
		if [ $P = 256 ]; then
		  if [ -f $gfl ]; then
		    P="$(cat $gfl)"
		    if ! isf "$P"; then P=256; fi
		  fi
		else T=1; fi
		if [ $P = 256 ]; then
		  P=$(getp "$1")
		  if [ $P = 256 ]; then P=105; fi
		  T=1
		fi
		if [ "$T" = 1 ]; then
		  if [ -w /root ]; then
		    printf "$P" > $gfl
		  else
		    printf "$P" | sudo tee $gfl 1> /dev/null
		  fi
		fi
		pisi() {
		  if [ -w "$2" ]; then printf "$1" > "$2"
		  else
		    printf "$1" | sudo tee "$2" 1> /dev/null
		  fi
		}
		GPUL=/sys/class/drm/card0/device/hwmon/hwmon0/pwm1
		if [ -z "$1" ]; then
		  pisi 1 ${GPUL}_enable
		fi
		pisi "$P\n" $GPUL
	
	/etc/systemd/system/gpu_fan.service:
	
		[Unit]
		Description=Set GPU fans to 40%
		After=suspend.target
		
		[Service]
		Type=oneshot
		ExecStart=/usr/local/bin/gpu_fan
		
		[Install]
		WantedBy=multi-user.target suspend.target
	
	dodaj u /etc/bash.bashrc:
	
		gpf() {
		  local dflt=45
		  bash /usr/local/bin/gpu_fan $dflt $1
		}
	
10. updatovanje:
	1. metod:
		sudo pacman -Sy      # this only updates the repository "local list of all programs", to actually update run -Syu instead
	2. metod:
		sudo pacman -S pacman-mirrorlist
		cp /etc/pacman.d/mirrorlist.pacnew ~/tren/
		cd ~/tren
		sed -i 's/^#Server/Server/' mirrorlist.pacnew      # ili uradi ovo rucno, odaberi neke mirrore
		rankmirrors -n 10 mirrorlist.pacnew > mirrorlist   # ali prvo outputuj u terminal, pa onda sacuvaj u fajl
		cp mirrorlist /etc/pacman.d/
		sudo pacman -S archlinux-keyring
		sudo pacman-key --populate
		sudo pacman -Sy
	3. posle toga:
		sudo pacman -Su

11. locales:
	1. skracenica: "i18n" = "Internationalization and localization"
	2. to je formalno samo standard
	3. glibc sadrzi sistemski deo ovog standarda (stvari koje se koriste u sistemu,
		a mogu biit lokalizovane, kao format brojeva, valuta, vremena, itd...)
	4. locale C (i C.UTF-8) su posebni, univerzalni i postoje nezavisno od
		toga koji su generisani (kompajlovani)
	5. programi koriste (glibc koristi) binarne fajlove za definiciju od locales,
		a covek definicije pravi u tekstualnom formati, pa se za taj prevod
		koristi locale-gen program (komanda)
	6. folderi i fajlovi:
		/usr/share/i18n/SUPPORTED - suportovani locales
		/usr/share/i18n/locales/ - definicije (tekstualne) od locales (sistemski)
		/etc/locale.gen - spisak locala koji ce da se kompajluju
		/usr/lib/locale/ - kompajlovani locales (sistemski)
	7. po raznim drugim lokacijama (uglavnom u /usr/share) postoje fajlovi
		.po (GNU gettext message caalogue, prekompajlovani) i
		.mo (GNU message catalogue, kompajlovani),
		koji sadrze tekstove za prevod nesistemskih programa na druge locales
	8. trenutni locale koji neki program koristi se moze definisati pomocu
		environment variabli (default je C) ili preko glibc funkcija (ne znam koje su...)
	9. na pocetku sesije se pokrece /etc/profile.d/locale.sh da setuje da setuje environment variable
		za locale sesije
	10. komande:
		za kompajlovanje sistemskih locala: locale-gen
		za prikaz trenutnih locala u programu: locale
		za prikaz svih enablovanih locales: locale -a
		za prikaz svih kompajlovanih locales: localedef --list-archive
		za listanje "available" locala: localectl list-locales

--------------- SETUP ---------------

	konfigurisi:
		chromium
		corectrl



------------   CONFIGS   ------------

--------   corectrl

Global Profile: CPU off, GPU on -> Ventilation: Curve: (40,40), (60,70), (70,100)

--------   chromium

chromium:
	settings:
		Autofill:
			Passwords:
				UKLJUCI Offer to save passwords
		Security and Privacy:
			Security:
				UKLJUCI Always use secure connections
				UKLJUCI Use secure DNS
			Site Settings:
				ISKLJUCI JavaScript
		Appearance:
			UKLJUCI Show home button
			ISKLJUCI Show bookmarks bar
		Search engine:
			POSTAVI "Search engine used in the address bar" na "DuckDuckGo"
		(advanced)
		Languages:
			UKLJUCI Offer to translate pages that aren't in a language you read
			ISKLJUCI Spell check
		Downloads:
			Location: /home/korsic/tren
			UKLJUCI Ask where to save each file before downloading


--------   thunar

	Open Terminal Here:
		xfce4-terminal --default-working-directory=%f
	Create symlink:
		ln -s %f %n_link
	Open folder as root:
		gksu --disable-grab dbus-run-session thunar %f
	Ownership to root:
		gnome-keyring-daemon -r -d;gksu --disable-grab "chown -R root:root %F"
	Ownership to user:
		gnome-keyring-daemon -r -d;gksu --disable-grab "chown -R $USER:$USER %F"

--------   geany

geany(i root):
	Edit -> Preferences:
		in Keybindings:	Switch to Editor = <Alt>1
						Switch to VTE    = <Alt>2
						Toggle Messages Window = <Alt>a
		in Terminal: mark Follow path of the current file
		(optional) in General -> Miscellaneous: unmark Beep on errors
		(optional) in General -> Startup: unmark Load files from the last session
		(optional) in Editor -> Features: change Comment toggle marker to an empty string or a single space
		(optional) in Editor -> Features: mark Newline strips trailing spaces
		(optional) in Editor -> Display: unmark Long line marker > Enabled
		(optional) in Editor -> Display: unmark Stop scrolling at last line
		(optional) in Files: mark Strip trailing spaces and tabs
		in Tools, set:
			Terminal: alacritty -e /bin/sh %c
			Browser: chromium
	View:
		unmark Show Sidebar
		unmark Show Toolbar
	Open any .cpp file, go to Build -> Set Build Commands and set:
		[read the g++flags file]
	Open any .java file, go to Build -> Set Build Commands and set:
		Compile (F8): javac "%f" -d .
	Tools -> Plugin Manager: select Auto-close; Preferences: unmark "Parenthesis" and "Double quotes"
	exit geany
	iskopiraj sve iz foldera "colorschemes" u ~/.config/geany/colorschemes/

--------   g++

pogledaj extra/cppc skriptu

--------   gimp

gimp:
	Preferences -> Interface -> Icon Theme -> Custom icon size: large
	(i ako to nije dovoljno:)
iskopiraj folder Dark iz /usr/share/gimp/2.0/themes u ~/.config/GIMP/2.10/themes/ i preimenuj ga u DarkHighDPI
u DarkHighDPI/gtkrc otkomentiraj linije:
	gtk-font-name = "Sans 13"
	  font_name = "Sans 13"
gimp:
	Preferences > Interface > Theme: DarkHighDPI

--------   guvcview

guvcview: Photo/File=~/tren, Video/File=~/tren

--------   java

pacman -S jre-openjdk
...

--------   minecraft

terminal:
	curl $(curl -ILs -o /dev/null -w %{url_effective} https://tlauncher.org/jar | tail -c12 | sed 's/^.*-\(.*\)\.zip.*$/https:\/\/repo.tlauncher.org\/update\/lch\/TLauncher-\1.jar/') > ~/tren/TLauncher.jar
	chmod 755 TLauncher.jar
	if ! [ -d ~/.tlauncher ]; then mkdir ~/.tlauncher; fi
	cp TLauncher.jar ~/.tlauncher/TLauncher.jar
dodaj u aliase (~/.bashrc):
	alias mc='java -jar ~/.tlauncher/TLauncher.jar'
tlauncher:
	settings:
		resolution:	1920x1080
		version list: samo "Show modified"
		Memory allocation: 12288 MB
	Accounts/Configure Accounts:
		TLauncher Account:
			username: donaastor
			password: ***************

hamachi:

terminal:
	pikaur logmein-hamachi
	pikaur -Sc
	sudo systemctl start logmein-hamachi
	sudo systemctl stop logmein-hamachi
thunar(root):
	iskopiraj h2-engine-override.cfg u /var/lib/logmein-hamachi/
terminal:
	sudo ufw allow 25565

--------   sagemath

terminal:
	pacman -S sagemath sagemath-doc
	echo "%colors NoColor" >> ~/.sage/init.sage

--------   latex

terminal:
	pacman -S --needed texlive-core texlive-formatsextra texlive-langcyrillic texlive-latexextra texlive-science texlive-fontsextra
	pikaur -S tikzit

